<?php

namespace AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;


/**
 * userRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QouiquiRepository extends EntityRepository
{

    private $select = 'cat.libelle as catName, v.libelle as villeName';

    /**
     * @param $tag
     * @return array
     */
    public function filterByTag($tag ,$vid)
    {
        $qb = $this->createQueryBuilder("u");
        $qb ->join('u.qvilles','qv')
            ->join('qv.ville' , 'v')
            ->join('u.ngns','g')
            ->join('g.category','cat')


            ->orWhere("u.lastName like :myTag OR u.firstName like :myTag OR u.phone like :myTag OR u.phone2 like :myTag OR u.mail like :myTag OR cat.libelle LIKE :myTag")

            ->orWhere("cat.libelle LIKE :myTag")

            ->andWhere("v.id LIKE :vid")

            ->setParameter('myTag', $tag)

            ->setParameter('vid', $vid)
        ;

        return $qb->getQuery()->getResult();

    }

    public function findByNorV($tag,$cat)
    {
        $qb = $this->createQueryBuilder("u");
        $qb->join('u.qvilles', 'qv')
            ->join('qv.ville', 'v')
            ->join('u.ngns', 'g')
            ->join('g.category', 'cat')
            ->where('(v.libelle LIKE :myTag or u.firstName LIKE :myTag1) and (cat.slug = :cat) ')
            ->setParameter('myTag', '%'.$tag.'%')
            ->setParameter('myTag1', '%'.$tag.'%')
            ->setParameter('cat', $cat);
            return $qb->getQuery()->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
    }



    public function filtreQQuibycat($catslug, $vid)
    {


        $qb = $this->createQueryBuilder("u");


        //      $qb
//            ->select($this->select)
//          ->select('u', 'v')
//            ->Join("AdminBundle:Qville", "qv", "with", "qv.qouiqui = u.id")
//            ->Join("AdminBundle:Ville", "v", "with", "v.id = qv.ville")
//            ->Join("AdminBundle:Ngn", "g", "with", "g.qouiqui = u.id")
//            ->Join("AdminBundle:Category", "cat", "with", "cat.id = g.category")
//            ->where("cat.slug = :catslug and v.id= :vId ")
//            ->setParameter('catslug', $catslug)
//            ->setParameter('vId', $vid);


        $qb ->join('u.qvilles','qv')
            ->join('qv.ville' , 'v')
            ->join('u.ngns','g')
            ->join('g.category','cat')
            ->where("cat.slug = :catslug and v.id= :vId ")
            ->setParameter('catslug', $catslug)
            ->setParameter('vId', $vid)
        ;




//        $qb->where("u.name like :tag_param")
//            ->setParameter('tag_param', "'%".$tag["ville"]."%'");
        return $qb->getQuery()->getResult();

    }

    public function filtreQQuibyinfo($info, $vid)
    {


        $qb = $this->createQueryBuilder("u")
            ->LeftJoin("AdminBundle:Qville", "qv", "with", "qv.qouiqui = u.id")
            ->LeftJoin("AdminBundle:Ville", "v", "with", "v.id = qv.ville")
            ->where("(u.lastName like :info OR u.firstName like :info OR u.phone like :info OR u.phone2 like :info OR u.mail like :info) and v.id= :vId ")
            ->setParameter('info', $info)
            ->setParameter('vId', $vid);

        return $qb->getQuery()->getResult();

    }

    public function filtreQQuibyville($vid)
    {

        $qb = $this->createQueryBuilder("u")
            ->LeftJoin("AdminBundle:Qville", "qv", "with", "qv.qouiqui = u.id")
            ->LeftJoin("AdminBundle:Ville", "v", "with", "v.id = qv.ville")
            ->where("(v.id= :vId )")
            ->setParameter('vId', $vid);

        return $qb->getQuery()->getResult();

    }


}

